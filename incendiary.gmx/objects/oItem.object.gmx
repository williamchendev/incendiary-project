<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sItems</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

//Settings
item = 0;

action = instance_create(x, y, oAction);
action.action_type = 1;

selected = false;

can_pick = true;
pick_up = false;
put_down = true;
event = 0;

//Text Event
type = 0;
text_font = RegularFont;
no_room_text = "My pockets are#full right now...";
text_displace_y = 50;

pick_up_text = noone;
pick_up_text[0, 0] = "...";
pick_up_text[0, 1] = x;
pick_up_text[0, 2] = y;
pick_up_text[0, 3] = c_white;

pick_up_text[1, 0] = "...";
pick_up_text[1, 1] = x;
pick_up_text[1, 2] = y;
pick_up_text[1, 3] = c_white;

pick_up_text[2, 0] = "...";
pick_up_text[2, 1] = x;
pick_up_text[2, 2] = y;
pick_up_text[2, 3] = c_white;

put_down_text = noone;
put_down_text[0, 0] = "...";
put_down_text[0, 1] = x;
put_down_text[0, 2] = y;
put_down_text[0, 3] = c_white;

put_down_text[1, 0] = "...";
put_down_text[1, 1] = x;
put_down_text[1, 2] = y;
put_down_text[1, 3] = c_white;

put_down_text[2, 0] = "...";
put_down_text[2, 1] = x;
put_down_text[2, 2] = y;
put_down_text[2, 3] = c_white;

move_x = x;
move_y = y - 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step Event

//Settings
depth = -y;
action.x = x;
action.y = y - (sprite_height div 2);
action.selected = selected;
draw_set_font(text_font);

//Clicked &amp; Character Move Script
if (action.clicked){
    with(oItem){
        selected = false;
    }
    with(oInspect){
        selected = false;
    }
    with(oNPC){
        selected = false;
    }
    AnnaMoveScript(move_x, move_y);
    action.clicked = false;
    selected = true;
}

//Selected &amp; Character Touch Event
if (selected){
    if (!oAnna.moving){
        selected = false;
    }
    else {
        if (abs(oAnna.x - move_x) &lt; 1){
            if (abs(oAnna.y - move_y) &lt; 1){
                oAnna.canmove = false;
                oAnna.moving = false;
                pick_up = true;
                event = 0;
            }
        }
    }
}

//Item Scripts &amp; Dialogue
if (pick_up){
    if (can_pick){
        if (!instance_exists(oText)){
            if (event &lt; array_height_2d(pick_up_text)){
                if (type == 0){
                        pick_up_text[event, 1] = oAnna.x;
                        pick_up_text[event, 2] = oAnna.y - (text_displace_y + (string_height_ext(pick_up_text[event, 0], -1, 120) / 2));
                        pick_up_text[event, 3] = c_white;
                }
                TextScript(pick_up_text[event, 1], pick_up_text[event, 2], pick_up_text[event, 0], pick_up_text[event, 3], 0.35);
                event++;
            }
            else {
                if(ItemAddScript(0)){
                    with (action){
                        instance_destroy();
                    }
                    instance_destroy();
                    oAnna.gui = true;
                }
                else {
                    if (put_down){
                        TextScript(oAnna.x, oAnna.y - (text_displace_y + (string_height_ext(no_room_text, -1, 120) / 2)), no_room_text, c_white, 0.35);
                        put_down = false;
                    }
                    else {
                        oAnna.canmove = true;
                        pick_up = false;
                        put_down = true;
                        selected = false;
                    }
                }
            }
        }
    }
    else {
        if (!instance_exists(oText)){
            if (event &lt; array_height_2d(put_down_text)){
                if (type == 0){
                        put_down_text[event, 1] = oAnna.x;
                        put_down_text[event, 2] = oAnna.y - (text_displace_y + (string_height_ext(put_down_text[event, 0], -1, 120) / 2));
                        put_down_text[event, 3] = c_white;
                }
                TextScript(put_down_text[event, 1], put_down_text[event, 2], put_down_text[event, 0], put_down_text[event, 3], 0.35);
                event++;
            }
            else {
                oAnna.canmove = true;
                pick_up = false;
                selected = false;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Event

//Action
if (distance_to_point(mouse_x, mouse_y) &lt;= (sprite_width - (sprite_width div 2.2))){
    //Player
    if (instance_exists(oAnna)){
        //Outline
        if (oAnna.canmove){
            if (!selected){
                OutlineScript(sprite_index, item + 1);
            }
        }
    }
    
    action.prox = true;
}
else {
    action.prox = false;
}

//Draw Self
draw_sprite(sprite_index, item + 1, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
