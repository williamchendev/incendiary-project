<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSystem</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

//Settings
pause = false;
room_type = "map";

//Variables
people = 0;
napol = 0;
gas = 80;
gasmax = 300;
rations = 0;

sm_rounds = 0;
md_rounds = 0;
lg_rounds = 0;
grenades = 0;

time = 1200;
timespd = 30;
timer = 0;

//Image
sin_val = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_f11)){
    window_set_fullscreen(!window_get_fullscreen());
}

if (keyboard_check_pressed(ord("R"))){
    room_restart();
}


if (room_type == "map"){
    //Timer
    timer++;
    if (timer == timespd){
        timer = 0;
        time++;
        if (time &gt;= 1440){
            time = 0;
        }
    }
    
    //Gas
    gas = clamp(gas, 0, gasmax);
    
    //Scroll Map
    if (mouse_check_button(mb_left)){
        view_xview += ((mouse_x - (view_wview / 2)) - view_xview) * 0.05;
        view_yview += ((mouse_y - (view_hview / 2)) - view_yview) * 0.05;
        
        view_xview = round(view_xview);
        view_yview = round(view_yview);
    }
}
else {
     view_xview = 0;
     view_yview = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Event

//Cursor
if (mouse_check_button(mb_left)){
    sin_val += 0.02;
    if (sin_val &gt;= 1){
        sin_val = 0;
    }
    var mouse_effect = 0.5 - (0.5 * sin(sin_val * (2 * pi)));
    draw_sprite_ext(sGUIIcons, 0, mouse_x, mouse_y, (mouse_effect * 0.4) + 0.6, (mouse_effect * 0.4) + 0.6, sin_val * 360, c_white, (mouse_effect * 0.4) + 0.6);
}
else {
    sin_val = 0.0;
    draw_sprite(sGUIIcons, 0, mouse_x, mouse_y);
}

//Draw GUI
if (room_type == "map"){
    draw_sprite(sMenu, 0, view_xview, view_yview);
    draw_set_font(RegularFont);
    draw_set_colour(c_white);
    
    //Time
    draw_set_halign(fa_center);
    draw_text(view_xview + 25, view_yview + 13, string(time div 60) + ":" + string(time mod 60));
    draw_set_halign(fa_left);
    
    //Fuel
    draw_rectangle(view_xview + 69, view_yview + 6, view_xview + 69 + (93 * (gas / gasmax)), view_yview + 9, false);
    
    //Units, Nepols, and Rations
    draw_text(view_xview + 96, view_yview + 15, string(people));
    draw_text(view_xview + 150, view_yview + 15, string(napol));
    draw_text(view_xview + 196, view_yview + 15, string(rations));
    
}
else if (room_type == "combat"){

}

/**
draw_sprite(sMenu, 0, view_xview, view_yview);
draw_sprite(sGUIIcons, 1, view_xview + 6, view_yview + 6);
draw_sprite(sGUIIcons, 2, view_xview + 6, view_yview + 18);
draw_sprite(sGUIIcons, 3, view_xview + 6, view_yview + 30);

draw_sprite(sGUIIcons, 4, view_xview + 88, view_yview + 6);
draw_sprite(sGUIIcons, 5, view_xview + 88, view_yview + 18);
draw_sprite(sGUIIcons, 6, view_xview + 88, view_yview + 30);

draw_set_font(RegularFont);
draw_set_colour(c_white);
draw_text(view_xview + 18, view_yview + 3, "Units: " + string(people));
draw_text(view_xview + 18, view_yview + 15, "Napols: " + string(napol));
draw_text(view_xview + 18, view_yview + 27, "Fuel: " + string(gas));

draw_text(view_xview + 106, view_yview + 3, ".28 cal: " + string(sm_rounds));
draw_text(view_xview + 106, view_yview + 15, ".30 cal: " + string(md_rounds));
draw_text(view_xview + 106, view_yview + 27, ".355 cal: " + string(lg_rounds));

*/

/**
draw_sprite(sMenu, 0, view_xview, view_yview);
draw_sprite(sGUIIcons, 1, view_xview + 10, view_yview + 10);
draw_sprite(sGUIIcons, 2, view_xview + 92, view_yview + 10);
draw_sprite(sGUIIcons, 3, view_xview + 174, view_yview + 10);

draw_set_font(RegularFont);
draw_set_colour(c_white);
draw_text(view_xview + 18, view_yview + 3, "Units: " + string(people));
draw_text(view_xview + 98, view_yview + 3, "Napols: " + string(napol));
draw_text(view_xview + 180, view_yview + 3, "Fuel: " + string(gas));
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
