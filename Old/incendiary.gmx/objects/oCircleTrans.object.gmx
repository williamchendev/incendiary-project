<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSystem</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

//Settings
color = c_black;
wait = 50;

//Variables
radius = 20;
time = 0;
spd = 5;
limit_add = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step Event

time += spd;

if (time &gt;= (((view_wview + view_hview) / 2) + limit_add + (wait * spd))){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Event

draw_set_alpha(1);
draw_set_color(color);

for (w = 0; w &lt;= (view_wview / radius); w++){
    for (h = 0; h &lt;= (view_hview / radius); h++){
        var rad_p = ((w + h) * radius) + (radius / 2);
        var rad_q = (time - rad_p - (radius / 2)) / 24;
        
        var rad_temp = 0.7 * sqr(clamp(rad_q, 0, radius / 2));
        var over = clamp(rad_temp - (radius / 2), 0, 4);
        
        //Left
        var temp_x = view_xview + (w * radius) + (radius / 2);
        var temp_y = view_yview + (h * radius) + (radius / 2);
        draw_circle(temp_x - 1, temp_y - 1, clamp(rad_temp, 0, radius / 2) + over, false);
        
        //Right
        var temp_x = view_xview + (view_wview - ((w + 1) * radius)) + (radius / 2);
        var temp_y = view_yview + (view_hview - ((h + 1) * radius)) + (radius / 2);
        draw_circle(temp_x - 1, temp_y - 1, clamp(rad_temp, 0, radius / 2) + over, false);
    }
}

draw_set_color(c_black);

//draw_circle(view_xview, view_yview, (time * 0.75) - limit_add, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
